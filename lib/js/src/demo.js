// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function map(func, v) {
  if (v) {
    return /* Just */[Curry._1(func, v[0])];
  } else {
    return /* Nothing */0;
  }
}

function ap(func, v) {
  if (v && func) {
    return /* Just */[Curry._1(func[0], v[0])];
  } else {
    return /* Nothing */0;
  }
}

function id(v) {
  return v;
}

function maybe(fallback, transform, v) {
  if (v) {
    return Curry._1(transform, v[0]);
  } else {
    return fallback;
  }
}

var Maybe = /* module */[
  /* map */map,
  /* ap */ap,
  /* id */id,
  /* maybe */maybe
];

var value$prime = /* Just */["value"];

function transform() {
  return "Mapped";
}

var mapped = map(transform, /* Nothing */0);

var mapped$prime = map(transform, value$prime);

console.log(maybe("Nothing", id, mapped));

console.log(maybe("Nothing", id, mapped$prime));

console.log(ap(/* Just */[id], /* Just */["string"]));

var value = /* Nothing */0;

exports.Maybe = Maybe;
exports.value = value;
exports.value$prime = value$prime;
exports.transform = transform;
exports.mapped = mapped;
exports.mapped$prime = mapped$prime;
/* mapped Not a pure module */
